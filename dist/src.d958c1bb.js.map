{"version":3,"sources":["constrains/site.js","../utils.js","constrains/model.js","constrains/sidebar.js","constrains/app.js","model.js","index.js"],"names":["Site","selector","$el","document","querySelector","models","innerHTML","forEach","model","insertAdjacentHTML","toHtml","row","content","styles","col","css","Object","keys","map","key","join","block","type","Body","value","options","Error","TitleBody","tag","TextBody","TextColumnsBody","ImageBody","is","imageStyles","alt","Sidebar","addCallback","updateSite","init","template","addEventListener","add","bind","event","preventDefault","target","name","App","site","render","newBlock","console","log","push","color","padding","background","imgCoffee","display","width","height"],"mappings":"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","file":"src.d958c1bb.js","sourceRoot":"..\\src","sourcesContent":["export class Site {\r\n  constructor(selector) {\r\n    this.$el = document.querySelector(\"#site\");\r\n  }\r\n  render(models) {\r\n    this.$el.innerHTML = \"\";\r\n    models.forEach((model) => {\r\n      this.$el.insertAdjacentHTML(\"beforeend\", model.toHtml());\r\n    });\r\n  }\r\n}\r\n","export function row(content, styles = \"\") {\r\n  return `<div style=\"${styles}\" class='row'>${content}</div>`;\r\n}\r\n\r\nexport function col(content) {\r\n  return `<div class='col-sm'>${content}</div>`;\r\n}\r\n\r\nexport function css(styles = {}) {\r\n  if (typeof styles === \"string\") return styles;\r\n  const toString = (key) => `${key}: ${styles[key]}`;\r\n  return Object.keys(styles).map(toString).join(\";\");\r\n}\r\n\r\nexport function block(type) {\r\n  return `\r\n    <form name=\"${type}\">\r\n    <h5>${type}</h5>\r\n    <div class=\"form-group\">\r\n    <input class=\"form-control form-control-sm\" name=\"value\" placeholder=\"value\">\r\n    </div>\r\n    <div class=\"form-group\">\r\n        <input class=\"form-control form-control-sm\" name=\"styles\" placeholder=\"styles\">\r\n    </div>\r\n    <button type=\"submit\" class=\"btn btn-primary btn-sm\">Add</button>\r\n    </form>\r\n    <ht />\r\n    `;\r\n}\r\n","import { row, col, css } from \"../../utils\";\r\n\r\nclass Body {\r\n  constructor(value, options) {\r\n    this.value = value;\r\n    this.options = options;\r\n  }\r\n\r\n  toHtml() {\r\n    throw new Error(\"toHtml method must be implemented\");\r\n  }\r\n}\r\n\r\nexport class TitleBody extends Body {\r\n  constructor(value, options) {\r\n    super(value, options);\r\n  }\r\n  toHtml() {\r\n    const { styles, tag = \"h1\" } = this.options;\r\n    return row(col(`<${tag}>${this.value}</${tag}>`), css(styles));\r\n  }\r\n}\r\nexport class TextBody extends Body {\r\n  constructor(value, options) {\r\n    super(value, options);\r\n  }\r\n  toHtml() {\r\n    const { styles, tag = \"h1\" } = this.options;\r\n    return row(col(`<p>${this.value}</p>`), css(styles));\r\n  }\r\n}\r\nexport class TextColumnsBody extends Body {\r\n  constructor(value, options) {\r\n    super(value, options);\r\n  }\r\n  toHtml() {\r\n    const { styles, tag = \"h1\" } = this.options;\r\n    const content = this.value.map(col).join(\"\");\r\n    return row(content, css(styles));\r\n  }\r\n}\r\nexport class ImageBody extends Body {\r\n  constructor(value, options) {\r\n    super(value, options);\r\n  }\r\n  toHtml() {\r\n    const { styles, imageStyles: is, alt = \"\" } = this.options;\r\n    return row(\r\n      `\r\n      <img src=${this.value} alt=\"${alt}\" style=\"${css(is)}\">`,\r\n      css(styles)\r\n    );\r\n  }\r\n}\r\n","import { block } from \"../../utils\";\r\nimport { TextBody, TitleBody } from \"./model\";\r\n\r\nexport class Sidebar {\r\n  constructor(selector, addCallback) {\r\n    this.$el = document.querySelector(selector);\r\n    this.updateSite = addCallback;\r\n    this.init();\r\n  }\r\n\r\n  init() {\r\n    this.$el.insertAdjacentHTML(\"afterbegin\", this.template);\r\n    this.$el.addEventListener(\"submit\", this.add.bind(this));\r\n  }\r\n  get template() {\r\n    return [block(\"text\"), block(\"title\")].join(\"\");\r\n  }\r\n\r\n  add(event) {\r\n    event.preventDefault();\r\n    const type = event.target.name;\r\n    const value = event.target.value.value;\r\n    const styles = event.target.styles.value;\r\n    const block =\r\n      type === \"text\"\r\n        ? new TextBody(value, { styles })\r\n        : new TitleBody(value, { styles });\r\n    event.target.value.value = \"\";\r\n    event.target.styles.value = \"\";\r\n\r\n    this.updateSite(block);\r\n  }\r\n}\r\n","import { Site } from \"./site\";\r\nimport { Sidebar } from \"./sidebar\";\r\n\r\nexport default class App {\r\n  constructor(model) {\r\n    this.model = model;\r\n  }\r\n  init() {\r\n    const site = new Site(\"#site\");\r\n    site.render(this.model);\r\n\r\n    const updateCallback = (newBlock) => {\r\n      console.log(newBlock);\r\n      this.model.push(newBlock);\r\n      site.render(this.model);\r\n    };\r\n\r\n    new Sidebar(\"#panel\", updateCallback);\r\n  }\r\n}\r\n","import imgCoffee from \"./assets/glass-coffee-wooden-board.jpg\";\r\nimport {\r\n  TitleBody,\r\n  TextBody,\r\n  TextColumnsBody,\r\n  ImageBody,\r\n} from \"./constrains/model\";\r\n\r\nexport const model = [\r\n  new TitleBody(\"Site constructor powered by pure JavaScript\", {\r\n    styles: { color: \"blue\", \"text-align\": \"center\", padding: \"1.5rem\" },\r\n    tag: \"h2\",\r\n  }),\r\n  new TextBody(\"Models built as classes\", {\r\n    styles: {\r\n      background: \"linear-gradient(to bottom, #f2994a, #f2c94c)\",\r\n      padding: \"1rem\",\r\n      \"font-weight\": \"bold\",\r\n    },\r\n  }),\r\n  new TextColumnsBody([\"Text holder 1\", \"Text holder 2\", \"Text holder 3\"], {\r\n    styles: {\r\n      background: \"linear-gradient(to bottom, #8e2de2, #4a00e0)\",\r\n      padding: \"2rem\",\r\n      color: \"#fff\",\r\n      \"font-weight\": \"bold\",\r\n    },\r\n  }),\r\n  new ImageBody(imgCoffee, {\r\n    styles: {\r\n      padding: \"2rem 0\",\r\n      display: \"flex\",\r\n      \"justify-content\": \"center\",\r\n    },\r\n    imageStyles: {\r\n      width: \"500px\",\r\n      height: \"auto\",\r\n    },\r\n    alt: \"Cup of coffee\",\r\n    // styles: \"display: block;  margin-left: auto; margin-right: auto\",\r\n  }),\r\n];\r\n","import App from \"./constrains/app\";\r\nimport { model } from \"./model\";\r\nimport \"./styles/main.css\";\r\n\r\nnew App(model).init();\r\n"]}